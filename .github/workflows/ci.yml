name: CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m venv .venv
        . .venv/bin/activate
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests
      run: |
        . .venv/bin/activate
        python -m pytest -q

    - name: Build Docker image (tests already ran)
      run: |
        docker build -t semptifygui:ci .
  scan-image:
    name: Scan built image with Trivy
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
    - name: Run Trivy scan
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: semptifygui:ci
        format: 'sarif'
        output: trivy-report.sarif
        exit-code: '1'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy SARIF to GitHub code scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: trivy-report.sarif

    - name: Upload Trivy reports (artifact)
      uses: actions/upload-artifact@v4
      with:
        name: trivy-reports-${{ github.run_id }}
        path: trivy-report.sarif

  publish-image:
    name: Publish image to GHCR
    runs-on: ubuntu-latest
    needs: scan-image
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image to GHCR
        id: build_and_push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/semptifygui:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/semptifygui:latest

      - name: Save image info artifact
        run: |
          echo "repo=ghcr.io/${{ github.repository_owner }}/semptifygui" > image-info.txt
          echo "tag=${{ github.ref_name }}" >> image-info.txt
          echo "latest=ghcr.io/${{ github.repository_owner }}/semptifygui:latest" >> image-info.txt
          echo "digest=${{ steps.build_and_push.outputs.digest }}" >> image-info.txt
        shell: bash

      - name: Upload image info artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-info-${{ github.ref_name }}
          path: image-info.txt

  generate-sbom:
    name: Generate SBOM for image
    runs-on: ubuntu-latest
    needs: publish-image
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate SBOM with Syft
        uses: anchore/syft-action@v1
        with:
          image: semptifygui:latest
          output-file: sbom.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ github.ref_name }}
          path: sbom.json

  integration-test:
    name: Integration test (run container and smoke test)
    runs-on: ubuntu-latest
    needs: scan-image
    if: github.event_name != 'schedule'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build docker image for integration test
        run: |
          docker build -t semptifygui:integration .

      - name: Run container
        run: |
          docker run -d --name semptify-integration -p 127.0.0.1:8081:8080 semptifygui:integration || (docker ps -a && docker logs semptify-integration && false)

      - name: Wait for HTTP health (max 30s)
        run: |
          for i in {1..30}; do
            if curl -fsS http://127.0.0.1:8081/health; then
              echo "healthy"; break
            fi
            sleep 1
            echo "waiting... $i"
          done

      - name: Check index page
        run: |
          curl -fsS http://127.0.0.1:8081/ | grep -q "SemptifyGUI is live"

      - name: Tear down container and image
        run: |
          docker stop semptify-integration || true
          docker rm semptify-integration || true
          docker rmi semptifygui:integration || true

  publish-dockerhub:
    name: Publish image to Docker Hub
    runs-on: ubuntu-latest
    needs: publish-image
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/semptifygui:${{ github.ref_name }}
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/semptifygui:latest

  create-release:
    name: Create GitHub Release and attach image info
    runs-on: ubuntu-latest
    needs: publish-image
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}
            
            Changes:
            ${{ github.event.head_commit.message }}

      - name: Download image info artifact
        uses: actions/download-artifact@v4
        with:
          name: image-info-${{ github.ref_name }}

      - name: Download SBOM artifact
        uses: actions/download-artifact@v4
        with:
          name: sbom-${{ github.ref_name }}

      - name: Upload Trivy reports (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports-${{ github.run_id }}
          path: trivy-report.sarif

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ github.ref_name }}
          path: sbom.json

      - name: Upload image info artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-info-${{ github.ref_name }}
          path: image-info.txt
