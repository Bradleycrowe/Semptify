name: CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m venv .venv
        . .venv/bin/activate
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests
      run: |
        . .venv/bin/activate
        python -m pytest -q

    - name: Build Docker image (tests already ran)
      run: |
        docker build -t semptifygui:ci .
  scan-image:
    name: Scan built image with Trivy
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch builds, optional)
        uses: docker/setup-qemu-action@v2

      - name: Build image for scanning (local load)
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: semptifygui:scan
          load: true

      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@v1
        with:
          image-ref: semptifygui:scan
          format: 'sarif'
          output: trivy-report.sarif
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy SARIF to GitHub code scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-report.sarif

      - name: Upload Trivy reports (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports-${{ github.run_id }}
          path: trivy-report.sarif

  publish-image:
    name: Publish image to GHCR
    runs-on: ubuntu-latest
    needs: scan-image
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image to GHCR
        id: build_and_push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/semptifygui:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/semptifygui:latest

      - name: Save image info artifact
        run: |
          echo "repo=ghcr.io/${{ github.repository_owner }}/semptifygui" > image-info.txt
          echo "tag=${{ github.ref_name }}" >> image-info.txt
          echo "latest=ghcr.io/${{ github.repository_owner }}/semptifygui:latest" >> image-info.txt
          echo "digest=${{ steps.build_and_push.outputs.digest }}" >> image-info.txt
        shell: bash

      - name: Upload image info artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-info-${{ github.ref_name }}
          path: image-info.txt

  publish-dockerhub:
    name: Publish image to Docker Hub
    runs-on: ubuntu-latest
    needs: publish-image
    if: startsWith(github.ref, 'refs/tags/') && (secrets.DOCKERHUB_USERNAME != null && secrets.DOCKERHUB_TOKEN != null)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/semptifygui:${{ github.ref_name }}
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/semptifygui:latest

  create-release:
    name: Create GitHub Release and attach image info
    runs-on: ubuntu-latest
    needs: publish-image
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}
            
            Changes:
            ${{ github.event.head_commit.message }}

      - name: Download image info artifact
        uses: actions/download-artifact@v3
        with:
          name: image-info-${{ github.ref_name }}

      - name: Attach image info to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./image-info.txt
          asset_name: image-info-${{ github.ref_name }}.txt
          asset_content_type: text/plain
